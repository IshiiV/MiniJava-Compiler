/* Generated By:JavaCC: Do not edit this line. MiniJavaParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int VIRG = 11;
  /** RegularExpression Id. */
  int SEMICOLON = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int EQ = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int SUB = 16;
  /** RegularExpression Id. */
  int DIV = 17;
  /** RegularExpression Id. */
  int MUL = 18;
  /** RegularExpression Id. */
  int LPAREN = 19;
  /** RegularExpression Id. */
  int RPAREN = 20;
  /** RegularExpression Id. */
  int LCOUCH = 21;
  /** RegularExpression Id. */
  int RCOUCH = 22;
  /** RegularExpression Id. */
  int LBRACE = 23;
  /** RegularExpression Id. */
  int RBRACE = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int LESS = 28;
  /** RegularExpression Id. */
  int GREATER = 29;
  /** RegularExpression Id. */
  int IF = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int TRUE = 33;
  /** RegularExpression Id. */
  int FALSE = 34;
  /** RegularExpression Id. */
  int NEW = 35;
  /** RegularExpression Id. */
  int THIS = 36;
  /** RegularExpression Id. */
  int VOID = 37;
  /** RegularExpression Id. */
  int LENGTH = 38;
  /** RegularExpression Id. */
  int BOOLEAN = 39;
  /** RegularExpression Id. */
  int INTEGER = 40;
  /** RegularExpression Id. */
  int STRING = 41;
  /** RegularExpression Id. */
  int STATIC = 42;
  /** RegularExpression Id. */
  int EXTENDS = 43;
  /** RegularExpression Id. */
  int RETURN = 44;
  /** RegularExpression Id. */
  int CLASS = 45;
  /** RegularExpression Id. */
  int PUBLIC = 46;
  /** RegularExpression Id. */
  int MAIN = 47;
  /** RegularExpression Id. */
  int IDENTIFIER = 48;
  /** RegularExpression Id. */
  int DIGIT = 49;
  /** RegularExpression Id. */
  int LETTER = 50;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 51;
  /** RegularExpression Id. */
  int PRINT = 52;
  /** RegularExpression Id. */
  int BEGIN = 53;
  /** RegularExpression Id. */
  int END = 54;
  /** RegularExpression Id. */
  int DO = 55;
  /** RegularExpression Id. */
  int THEN = 56;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<token of kind 6>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"==\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\">\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"new\"",
    "\"this\"",
    "\"void\"",
    "\"length\"",
    "\"boolean\"",
    "\"int\"",
    "\"String\"",
    "\"static\"",
    "\"extends\"",
    "\"return\"",
    "\"class\"",
    "\"public\"",
    "\"main\"",
    "<IDENTIFIER>",
    "<DIGIT>",
    "<LETTER>",
    "<INTEGER_LITERAL>",
    "\"System.out.println\"",
    "\"begin\"",
    "\"end\"",
    "\"do\"",
    "\"then\"",
  };

}
